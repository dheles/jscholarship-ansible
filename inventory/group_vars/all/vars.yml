# REM: if you are looking for passwords or other variables
# that vary from dev to stage to prod, check the other subfolders

# setup vars
project:        "jscholarship"
version:        "0.1.0"
login_user:     "deploy"
login_group:    "{{ login_user }}"

# testing vars
set_up_tests:   true

# application user vars - dspace user and tomcat user
app_user:       "dspace"

# install vars
dspace_major_version: 5
dspace_minor_version: 8
dspace_version:       "{{ dspace_major_version }}.{{ dspace_minor_version }}"
dspace_install_dir:   "/opt"
dspace_install:       "{{ dspace_install_dir }}/dspace"
dspace_user_home:     "/home/{{ app_user }}"
dspace_source_dir:    "dspace-{{ dspace_version }}"
dspace_source:        "{{ dspace_user_home }}/{{ dspace_source_dir }}"

# apache vars
dspace_name:            "JScholarship"
hostname:               "{{ dspace_name | lower }}"
domainname:             "library.jhu.edu"
apache_https:           true
apache_proxy_tomcat:    true

# tomcat vars
catalina_opts:          "-server
                        -Xms1024m
                        -Xmx2048m
                        -XX:+UseParallelGC"

# db vars
db_password:            "{{ vault_db_password }}"
db_name:                "dspace"
db_user:                "dspace"
db_create_users:        true
db_users:
  - user:               "{{ db_user }}"
    pass:               "{{ db_password }}"
    flags:              "NOSUPERUSER"

db_create_databases:    true
db_databases:
  - name:               "{{ db_name }}"
    encoding:           "UTF-8"
    owner:              "{{ db_user }}"

# TODO: use firewall config to limit access to particular IPs
postgres_hba_entries:
- type:                 "host"
  database:             "{{ db_name }}"
  user:                 "{{ db_user }}"
  address:              "samenet"
  method:               "md5"

# NOTE: db_source is the name of the production database, and needs its own var,
# as the test db must have a different db_name, since it shares a server with stage
db_source:        "dspace"
db_backup_file:   "{{ db_name }}_{{ environ }}_backup.sql"
copy_db_name:     "{{ db_source }}_copy"
copy_backup_file: "{{ copy_db_name }}_backup.sql"
db_retain_backup:       true

# data transform queries
db_transform_queries:
- "anonymize_db.sql.j2"

# admin vars
# members of this list will not be anonymized (no additional permissions granted):
admin_users: "{{ vault_admin_users }}"

# vars for branding
# -----------------
logo_blue:    "002D72" #	PMS 288C
medium_blue:  "005EB8" # PMS 300C
blue_grey:    "A7BCD6" #	PMS 651C
logo:         "sheridan-libraries.logo.small.horizontal.white.svg"

# assetstore vars
remote_stores_available: false
stores_fstab:             ""
assetstores:
  - assetstore
  - assetstore1

# config vars
dspace_handle_canonical_prefix: "http://jhir.library.jhu.edu/handle/"
dspace_handle_prefix:     1774.2
helpdesk_override:        true
# TODO: set true for prod
use_proxies:              false
bulk_edit_limit:          500
thumbnail_maxwidth:       200
thumbnail_maxheight:      200
thumbnail_imagemagick:    true

# logging vars
# TODO: incorporate logrotate
loglevel_default: "WARN"
loglevel_dspace:  "{{ loglevel_default }}"
loglevel_solr:    "{{ loglevel_default }}"
loglevel_other:   "{{ loglevel_default }}"
max_logs:         14
log_dir:          "{{ dspace_install }}/log"

# curation tasks vars
dspace_curation_loglevel: "ERROR"
# NOTE: set this var to override the log template for *all* curation tasks
# dspace_curation_log_template: "templates/log4j-curation.properties.j2"
dspace_curation_repo:       "https://github.com/dheles/ctask.git"
dspace_curation_branch:     "fixity"
dspace_curation_module:     "fixity"
dspace_curation_tasks:
  - shortname:              "fixity"
    ui_taskname:            "Check Fixity"
    package:                "org.dspace.ctask.fixity"
    classname:              "CheckFixity"
    bundle:                 "fixity-1.0-SNAPSHOT.jar"
    state:                  "present"
    logging:                true
    loglevel:               "ERROR"
    # NOTE: set this var to override the log template for *this* curation task
    # log_template:           "templates/log4j-curation.properties.j2"
