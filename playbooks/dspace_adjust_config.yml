---
# NOTE: this entails a lot of reaching into the dspace role's internals
# TODO: consider abstractions that might support the role's encapsulation
- name: post-install configuration
  hosts: app
  become: true
  # NOTE: it appears that since app_user can't restart tomcat,
  # the whole play needs to be run as root
  # become_user: "{{ app_user }}"

  tasks:
  - name: set up for dspace 5
    block:
    - name: set vars for dspace 5
      set_fact:
        dspace_config: "{{ dspace_source }}/dspace/config/dspace.cfg"

    # TODO: with this approach, *both* "update configs" handlers get executed
    # - name: include dspace 5 role to get its handlers
    #   include_role:
    #     name: dspace-5
    #     tasks_from: dolittle
    when: dspace_major_version == 5

  - name: set up for dspace 6
    block:
    - name: set vars for dspace 6
      set_fact:
        dspace_config: "{{ dspace_install }}/config/local.cfg"

    - name: include dspace 6 role to get its handlers
      include_role:
        name: dspace-6
        tasks_from: dolittle
    when: dspace_major_version == 6


  - name: request item configuration
    lineinfile:
      dest: "{{ dspace_config }}"
      regexp: "^request.item.helpdesk.override"
      line: "request.item.helpdesk.override = {{ helpdesk_override }}"
    notify: update configs

  - name: use proxies
    lineinfile:
      dest: "{{ dspace_config }}"
      regexp: "^useProxies"
      line: "useProxies = {{ use_proxies }}"
    notify: update configs

  - name: configure authentication methods
    template:
      src: templates/authentication.cfg.j2
      dest: "{{ dspace_source }}/dspace/config/modules/authentication.cfg"
    notify: update configs

  - name: configure shibboleth authentication
    template:
      src: templates/authentication-shibboleth.cfg.j2
      dest: "{{ dspace_source }}/dspace/config/modules/authentication-shibboleth.cfg"
    notify: update configs

  - name: template default license
    template:
      src: templates/default.license.j2
      dest: "{{ dspace_source }}/dspace/config/default.license"
    notify: update configs

  # configure assetstores
  - block:
    - name: configure assetstore 0
      lineinfile:
        dest: "{{ dspace_config }}"
        regexp: "^assetstore.dir\\s*="
        line: "assetstore.dir = /mnt/dspace/storage/assetstore"
      notify: update configs

    - name: configure assetstore 1
      lineinfile:
        dest: "{{ dspace_config }}"
        regexp: "^assetstore.dir.1"
        insertafter: "^assetstore.dir\\s*="
        line: "assetstore.dir.1 = /mnt/dspace/storage/assetstore1"
      notify: update configs

  # embargo settings
  - block:
    - name: configure embargo terms
      lineinfile:
        dest: "{{ dspace_config }}"
        regexp: "^embargo.field.terms"
        line: "embargo.field.terms = local.embargo.terms"
      notify: update configs

    - name: configure embargo lift
      lineinfile:
        dest: "{{ dspace_config }}"
        regexp: "^embargo.field.lift"
        line: "embargo.field.lift = local.embargo.lift"
      notify: update configs

    - name: raise bulk edit limit
      lineinfile:
        dest: "{{ dspace_source }}/dspace/config/modules/bulkedit.cfg"
        regexp: "^gui-item-limit"
        line: "gui-item-limit = {{ bulk_edit_limit }}"
      notify: update configs
  # end block - embargo settings

  - name: configure logging
    template:
      src: templates/log4j.properties.j2
      dest: "{{ dspace_source }}/dspace/config/log4j.properties"
    notify: update configs

  - name: configure logging - solr
    template:
      src: templates/log4j-solr.properties.j2
      dest: "{{ dspace_source }}/dspace/config/log4j-solr.properties"
    notify: update configs

  # thumbnail settings
  - block:
    - name: configure thumbnail width
      lineinfile:
        dest: "{{ dspace_config }}"
        regexp: "^thumbnail.maxwidth"
        line: "thumbnail.maxwidth = {{ thumbnail_maxwidth }}"
      notify: update configs

    - name: configure thumbnail height
      lineinfile:
        dest: "{{ dspace_config }}"
        regexp: "^thumbnail.maxheight"
        line: "thumbnail.maxheight = {{ thumbnail_maxheight }}"
      notify: update configs
  # end block - thumbnail settings

  # imagemagick - 5
  - block:
    - name: switch from default thumbnail generation to imagemagick
      lineinfile:
        dest: "{{ dspace_config }}"
        regexp: '(^\s+)(Word Text Extractor)(, JPEG Thumbnail)'
        line: |
          \1\2, \
          \1ImageMagick Image Thumbnail, \
          \1ImageMagick PDF Thumbnail
        backrefs: true
      notify: update configs
    when: thumbnail_imagemagick and dspace_major_version == 5
    # end block - imagemagick - 5

  # imagemagick - 6
  - block:
    - name: remove default thumbnail generation
      lineinfile:
        dest: "{{ dspace_install }}/config/dspace.cfg"
        regexp: '^filter.plugins = JPEG Thumbnail'
        state: absent
      notify: update configs

    - name: remove default PDF thumbnail generation
      lineinfile:
        dest: "{{ dspace_install }}/config/dspace.cfg"
        regexp: '^filter.plugins = PDFBox JPEG Thumbnail'
        state: absent
      notify: update configs

    - name: switch from default thumbnail generation to imagemagick
      blockinfile:
        dest: "{{ dspace_config }}"
        block: |
          filter.plugins = ImageMagick Image Thumbnail
          filter.plugins = ImageMagick PDF Thumbnail
        marker: "# {mark} ImageMagick Thumbnail Generation"
      notify: update configs
    when: thumbnail_imagemagick and dspace_major_version == 6
    # end block - imagemagick

  # SWORD v2
  - name: adjust SWORD v2 configuration
    blockinfile:
      dest: "{{ dspace_config }}"
      block: |
        swordv2-server.on-behalf-of.enable = true
        swordv2-server.verbose-description.receipt.enable = true
      marker: "# {mark} SWORD v2 server configuration"
    notify: update configs
    when: dspace_major_version == 6
  # end block - SWORD v2
