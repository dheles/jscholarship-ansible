---
# NOTE: this entails a lot of reaching into the dspace role's internals
# TODO: consider abstractions that might support the role's encapsulation
- name: post-install configuration
  hosts: app
  become: true
  # NOTE: it appears that since app_user can't restart tomcat,
  # the whole play needs to be run as root
  # become_user: "{{ app_user }}"

  tasks:
  - name: set up for dspace 5
    block:
    - name: set vars for dspace 5
      set_fact:
        dspace_config_dir:  "{{ dspace_source }}/dspace/config"
    - set_fact:
        dspace_config:      "{{ dspace_config_dir }}/dspace.cfg"

    # TODO: with this approach, *both* "update configs" handlers get executed
    # - name: include dspace 5 role to get its handlers
    #   include_role:
    #     name: dspace-5
    #     tasks_from: dolittle
    when: dspace_major_version == 5

  - name: set up for dspace 6
    block:
    - name: set vars for dspace 6
      set_fact:
        dspace_config_dir:  "{{ dspace_source }}/dspace/config"
    - set_fact:
        dspace_config:      "{{ dspace_config_dir }}/local.cfg"

    - name: include dspace 6 role to get its handlers
      include_role:
        name: dspace-6
        tasks_from: dolittle
    when: dspace_major_version == 6


  - name: request item configuration
    lineinfile:
      dest: "{{ dspace_config }}"
      regexp: "^request.item.helpdesk.override"
      line: "request.item.helpdesk.override = {{ helpdesk_override }}"
    notify: update configs

  - name: use proxies
    lineinfile:
      dest: "{{ dspace_config }}"
      regexp: "^useProxies"
      line: "useProxies = {{ use_proxies }}"
    notify: update configs

  - name: authentication - 5
    block:
    - name: configure authentication methods
      template:
        src: templates/authentication.cfg.j2
        dest: "{{ dspace_config_dir }}/modules/authentication.cfg"
      notify: update configs

    - name: configure shibboleth authentication
      template:
        src: templates/authentication-shibboleth.cfg.j2
        dest: "{{ dspace_config_dir }}/modules/authentication-shibboleth.cfg"
      notify: update configs
    when: dspace_major_version == 5

  - name: configure shibboleth authentication - 6
    template:
      src: templates/authentication-shibboleth-6.cfg.j2
      dest: "{{ dspace_config_dir }}/modules/authentication-shibboleth.cfg"
    notify: update configs
    when: dspace_major_version == 6

  - name: template default license
    template:
      src: templates/default.license.j2
      dest: "{{ dspace_config_dir }}/default.license"
    notify: update configs

  # configure assetstores
  - block:
    - name: configure assetstore 0
      lineinfile:
        dest: "{{ dspace_config }}"
        regexp: "^assetstore.dir\\s*="
        line: "assetstore.dir = /mnt/dspace/storage/assetstore"
      notify: update configs

    - name: configure assetstore 1
      lineinfile:
        dest: "{{ dspace_config }}"
        regexp: "^assetstore.dir.1"
        insertafter: "^assetstore.dir\\s*="
        line: "assetstore.dir.1 = /mnt/dspace/storage/assetstore1"
      notify: update configs

    - name: configure additional assetstore in bitstore
      template:
        src: "templates/bitstore.xml.j2"
        dest: "{{ dspace_config_dir }}/spring/api/bitstore.xml"
      notify: update configs

  # embargo settings
  - block:
    - name: configure embargo terms
      lineinfile:
        dest: "{{ dspace_config }}"
        regexp: "^embargo.field.terms"
        line: "embargo.field.terms = local.embargo.terms"
      notify: update configs

    - name: configure embargo lift
      lineinfile:
        dest: "{{ dspace_config }}"
        regexp: "^embargo.field.lift"
        line: "embargo.field.lift = local.embargo.lift"
      notify: update configs

    - name: raise bulk edit limit
      lineinfile:
        dest: "{{ dspace_config_dir }}/modules/bulkedit.cfg"
        regexp: "^gui-item-limit"
        line: "gui-item-limit = {{ bulk_edit_limit }}"
      notify: update configs
  # end block - embargo settings

  - name: configure logging
    template:
      src: templates/log4j.properties.j2
      dest: "{{ dspace_config_dir }}/log4j.properties"
    notify: update configs

  - name: configure logging - solr
    template:
      src: templates/log4j-solr.properties.j2
      dest: "{{ dspace_config_dir }}/log4j-solr.properties"
    notify: update configs

  # thumbnail settings
  - block:
    - name: configure thumbnail width
      lineinfile:
        dest: "{{ dspace_config }}"
        regexp: "^thumbnail.maxwidth"
        line: "thumbnail.maxwidth = {{ thumbnail_maxwidth }}"
      notify: update configs

    - name: configure thumbnail height
      lineinfile:
        dest: "{{ dspace_config }}"
        regexp: "^thumbnail.maxheight"
        line: "thumbnail.maxheight = {{ thumbnail_maxheight }}"
      notify: update configs
  # end block - thumbnail settings

  # imagemagick - 5
  - block:
    - name: switch from default thumbnail generation to imagemagick
      lineinfile:
        dest: "{{ dspace_config }}"
        regexp: '(^\s+)(Word Text Extractor)(, JPEG Thumbnail)'
        line: |
          \1\2, \
          \1ImageMagick Image Thumbnail, \
          \1ImageMagick PDF Thumbnail
        backrefs: true
      notify: update configs
    when: thumbnail_imagemagick and dspace_major_version == 5
    # end block - imagemagick - 5

  # imagemagick - 6
  - block:
    # TODO: test the necessity of these removals from dspace.cfg,
    # as we are resetting the value of this property in local.cfg anyway
    - name: remove default thumbnail generation
      lineinfile:
        dest: "{{ dspace_config_dir }}/dspace.cfg"
        regexp: '^filter.plugins = JPEG Thumbnail'
        state: absent
      notify: update configs

    - name: remove default PDF thumbnail generation
      lineinfile:
        dest: "{{ dspace_config_dir }}/dspace.cfg"
        regexp: '^filter.plugins = PDFBox JPEG Thumbnail'
        state: absent
      notify: update configs

    - name: switch from default thumbnail generation to imagemagick
      blockinfile:
        dest: "{{ dspace_config }}"
        block: |
          filter.plugins = ImageMagick Image Thumbnail
          filter.plugins = ImageMagick PDF Thumbnail
        marker: "# {mark} ImageMagick Thumbnail Generation"
      notify: update configs
    when: thumbnail_imagemagick and dspace_major_version == 6
    # end block - imagemagick

  # SWORD v2
  - name: set hostname var appropriately
    set_fact:
      config_hostname: "{{ hostname }}.{{ domainname }}"
  - set_fact:
      config_hostname: "{{ dspace_hostname_override }}"
    when: dspace_hostname_override is defined

  # for PASS, adjust to this:
  # swordv2-server.url = http://dspace-prod.mse.jhu.edu:8080/swordv2
  # swordv2-server.collection.url = https://jscholarship.library.jhu.edu/swordv2/collection
  # swordv2-server.servicedocument.url = http://dspace-prod.mse.jhu.edu:8080/swordv2/servicedocument
  # swordv2-server.on-behalf-of.enable = true
  # swordv2-server.verbose-description.receipt.enable = true
  - name: adjust SWORD v2 configuration - PASS
    blockinfile:
      dest: "{{ dspace_config }}"
      block: |
        swordv2-server.url = http://{{ fqdn }}:{{ default_port }}/swordv2
        swordv2-server.collection.url = https://{{ config_hostname }}/swordv2/collection
        swordv2-server.servicedocument.url = http://{{ fqdn }}:{{ default_port }}/swordv2/servicedocument
        swordv2-server.on-behalf-of.enable = true
        swordv2-server.verbose-description.receipt.enable = true
      marker: "# {mark} SWORD v2 server configuration"
    notify: update configs
    when: dspace_major_version == 6 and PASS_config

  - name: adjust SWORD v2 configuration - Vireo
    blockinfile:
      dest: "{{ dspace_config }}"
      block: |
        swordv2-server.on-behalf-of.enable = true
        swordv2-server.verbose-description.receipt.enable = true
      marker: "# {mark} SWORD v2 server configuration"
    notify: update configs
    when: dspace_major_version == 6 and not PASS_config

  # customize list views
  - name: add thumbs to list views
    blockinfile:
      dest: "{{ dspace_config }}"
      block: |
        xmlui.theme.mirage.item-list.emphasis = file
      marker: "# {mark} customize list views"
    notify: update configs
    when: thumbnail_lists and dspace_major_version == 6
  # end block - customize list views

  - name: dis/enable email
    block:
    - set_fact:
        disabled_state: "absent"
    - set_fact:
        disabled_state: "present"
      when: email_disabled

    - name: add or remove disabling block
      blockinfile:
        dest: "{{ dspace_config }}"
        block: |
          # NOTE: loglevel must be set to INFO or above for disabled email to be logged
          # changes to loglevel (unlike this setting) require tomcat restart
          mail.server.disabled = {{ email_disabled }}
        marker: "# {mark} disable email"
        state: "{{ disabled_state }}"
      notify: update configs

  - name: mail admin
    lineinfile:
      dest: "{{ dspace_config }}"
      regexp: "^mail.admin"
      line: "mail.admin = {{ dspace_mail_admin }}"
    notify: update configs

  - name: hostname override
    block:
      - name: set dspace (not apache) hostname
        lineinfile:
          dest: "{{ dspace_config }}"
          regexp: "^dspace.hostname"
          line: "dspace.hostname = {{ dspace_hostname_override }}"
        notify: update configs

      - name: set xmlui.public.logout so hostname is used for logout redirect
        lineinfile:
          dest: "{{ dspace_config }}"
          regexp: "^xmlui.public.logout"
          line: "xmlui.public.logout = true"
        notify: update configs
    when: dspace_hostname_override is defined

  - name: hostname default
    block:
      - name: set dspace (not apache) hostname
        lineinfile:
          dest: "{{ dspace_config }}"
          regexp: "^dspace.hostname"
          line: "dspace.hostname = {{ hostname }}.{{ domainname }}"
        notify: update configs

      - name: unset xmlui.public.logout
        lineinfile:
          dest: "{{ dspace_config }}"
          regexp: "^xmlui.public.logout"
          state: absent
        notify: update configs
    when: dspace_hostname_override is not defined

  - name: adjust baseUrl - PASS
    lineinfile:
      dest: "{{ dspace_config }}"
      regexp: "^dspace.baseUrl"
      line: "dspace.baseUrl = http://{{ fqdn }}:{{ default_port }}"
    notify: update configs
    when: PASS_config

  - name: adjust baseUrl - Vireo
    lineinfile:
      dest: "{{ dspace_config }}"
      regexp: "^dspace.baseUrl"
      line: "dspace.baseUrl = https://{{ fqdn }}"
    notify: update configs
    when: not PASS_config

  - name: toggle REST API security constraint
    block:
    - set_fact:
        comment_presence: "absent"
    - set_fact:
        comment_presence: "present"
      when: PASS_config

    - name: add or remove opening comment tag
      lineinfile:
        path: "{{ dspace_install }}/webapps/rest/WEB-INF/web.xml"
        regexp: '^<!-- disable security constraint'
        insertbefore: '<security-constraint>'
        line: '<!-- disable security constraint'
        state: "{{ comment_presence }}"

    - name: add or remove closing comment tag
      lineinfile:
        path: "{{ dspace_install }}/webapps/rest/WEB-INF/web.xml"
        regexp: '^disable security constraint -->'
        insertafter: '</security-constraint>'
        line: 'disable security constraint -->'
        state: "{{ comment_presence }}"

    # end block - toggle REST API security constraint
